<Window x:Class="FactorySADEfficiencyOptimizer.UIComponent.ProductionAnalysisWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FactorySADEfficiencyOptimizer.UIComponent"
        xmlns:classes="clr-namespace:FactorySADEfficiencyOptimizer.ViewModel"
        xmlns:d3="clr-namespace:InteractiveDataDisplay.WPF;assembly=InteractiveDataDisplay.WPF"
        xmlns:converter="clr-namespace:FactorSADEfficiencyOptimizer.UIComponent.Converters"
        mc:Ignorable="d" DataContext="{Binding simModel}"
        Title="ProductionAnalysisWindow"
        Height="450" Width="800"
        WindowStyle="ToolWindow">
    <Window.Background>
        <SolidColorBrush Color="DarkGray"></SolidColorBrush>
    </Window.Background>
    <Window.Resources>
        <converter:MarginConverter x:Key="marginConverter"></converter:MarginConverter>
    </Window.Resources>
    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="46*"></ColumnDefinition>
            <ColumnDefinition Width="17*"></ColumnDefinition>
            <ColumnDefinition Width="17*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Grid.RowSpan="2" Margin="0 0 4 10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5*"></RowDefinition>
            </Grid.RowDefinitions>
            <DockPanel Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Border Background="LightSlateGray">
                    <Slider VerticalAlignment="Center" IsSnapToTickEnabled="True" TickPlacement="BottomRight"
                            TickFrequency="1"
                            Width="250" Minimum="1" Maximum="8" Value="{Binding DaysToRun, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Left"
                            Margin="10 0 10 0" ValueChanged="Slider_ValueChanged"></Slider>
                </Border>
                <Border Background="LightGray" BorderThickness="0" BorderBrush="Transparent">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Days to run:" Margin="5 0 3 0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                   FontSize="16"
                                    x:Name="AnalysisPeriodTutor" Visibility="Visible"></TextBlock>
                        <TextBox Text="{Binding DaysToRun, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Visibility="Visible"
                                 Margin="5 0 0 0" FontSize="20" FontWeight="SemiBold" VerticalAlignment="Center" BorderThickness="0" KeyUp="AnalysisPeriodValue_KeyUp" LostFocus="AnalysisPeriodValue_LostFocus"
                                 Background="Transparent" x:Name="AnalysisPeriodValue"></TextBox>
                    </StackPanel>
                </Border>
            </DockPanel>
            <Border Grid.Row="1" Background="DarkGray" Padding="8" x:Name="ProductionTargList">
                <StackPanel Orientation="Vertical">
                    <Border BorderThickness="0 0 0 1" BorderBrush="black">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"></ColumnDefinition>
                                <ColumnDefinition Width="4*"></ColumnDefinition>
                                <ColumnDefinition Width="6*"></ColumnDefinition>
                                <ColumnDefinition Width="6*"></ColumnDefinition>
                                <ColumnDefinition Width="8*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Enabled"></TextBlock>
                            <TextBlock HorizontalAlignment="Left" Grid.Column="1" Text="Item"></TextBlock>
                            <TextBlock HorizontalAlignment="Left" Grid.Column="2" Text="Target Quantity"></TextBlock>
                            <TextBlock HorizontalAlignment="Left" Grid.Column="3" Text="Target Day"></TextBlock>
                            <TextBlock HorizontalAlignment="Left" Grid.Column="4" Text="Status"></TextBlock>
                        </Grid>
                    </Border>
                    <ListView Background="Transparent" BorderBrush="DarkGray" BorderThickness="1"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="ProdTargetList"
                              ItemsSource="{Binding ProductionTargets, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding TargetProductionTarget}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="LightGray" Height="48"
                                      Width="{Binding ElementName=ProdTargetList, Path=ActualWidth, Mode=OneWay, 
                                    UpdateSourceTrigger=PropertyChanged, Converter={StaticResource marginConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="4*"></ColumnDefinition>
                                        <ColumnDefinition Width="4*"></ColumnDefinition>
                                        <ColumnDefinition Width="4*"></ColumnDefinition>
                                        <ColumnDefinition Width="6*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Grid.Column="0" IsChecked="{Binding IsTargetEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"
                                              Margin="0 0 4 0" HorizontalAlignment="Center"></CheckBox>
                                    <TextBox Grid.Column="1" Text="{Binding ProductTarget.ProductName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Padding="9"
                                             FontSize="16"></TextBox>
                                    <TextBox Grid.Column="2" FontSize="16" Text="{Binding TargetQuantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Padding="9"></TextBox>
                                    <TextBox Grid.Column="3" FontSize="16" Text="{Binding DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Padding="9"></TextBox>
                                    <StackPanel Grid.Column="4" Orientation="Horizontal" Margin="10 0 0 0">
                                        <TextBlock Text="Not Run" FontSize="16" FontWeight="Bold" Foreground="DimGray" Margin="0 0 5 0" VerticalAlignment="Center"></TextBlock>
                                        <Image Height="48">
                                            <Image.Source>
                                                <BitmapImage DecodePixelHeight="48"
                                                             UriSource=".\Resources\UnrunTargetIcon.png">
                                                </BitmapImage>
                                            </Image.Source>
                                        </Image>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </Border>
            <Button Width="48" Height="48" VerticalAlignment="Bottom" Grid.RowSpan="2" HorizontalAlignment="Left"
                    Margin="20" Click="AddTargetButton_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="BorderThickness" Value="1"></Setter>
                        <Setter Property="BorderBrush">
                            <Setter.Value>
                                <RadialGradientBrush Opacity="1" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                    <GradientStopCollection>
                                        <GradientStop Color="LightGray" Offset="0.0"></GradientStop>
                                        <GradientStop Color="DarkGray" Offset="0.9"></GradientStop>
                                        <GradientStop Color="Black" Offset="1.7"></GradientStop>
                                    </GradientStopCollection>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <TextBlock FontFamily="Verdana" FontWeight="UltraBold" FontSize="30" Margin="0 0 0 5">
                        +
                    </TextBlock>
                </Button.Content>
            </Button>
        </Grid>

        <Grid Name="lines" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="4 0 0 0">
            <Border Background="LightGray" BorderBrush="DarkGray" BorderThickness="1">
                <d3:Chart x:Name="plotter" BottomTitle="Bottom" LeftTitle="Left">
                    <d3:LineGraph x:Name="linegraph" Description="Simple linegraph" Stroke="RoyalBlue" StrokeThickness="3"/>
                </d3:Chart>
            </Border>
        </Grid>
        <Border Grid.Row="1" Grid.Column="1" Margin="4 4 0 10" BorderBrush="Bisque" BorderThickness="1" Background="SandyBrown" CornerRadius="6">
            <Button Background="Transparent" BorderThickness="0" x:Name="CheckShipmentButton"
                    Click="OpenShipmentWindow_Click">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Check Shipments" FontSize="18" TextWrapping="Wrap" 
                                    Foreground="AntiqueWhite" VerticalAlignment="Center" 
                                    MaxWidth="100" TextAlignment="Right" FontWeight="SemiBold"></TextBlock>
                        <Image Panel.ZIndex="3" Margin="5 1 1 1" Width="50" Height="50" Source="../Resources/PackageIcon.png"></Image>
                    </StackPanel>
                </Button.Content>
            </Button>
        </Border>
        <Border Grid.Row="1" Grid.Column="2" BorderBrush="SkyBlue" Background="DodgerBlue" BorderThickness="1" CornerRadius="50" Margin="5 5 5 10">
            <Button Background="Transparent" BorderThickness="0" Click="StartSim_Click">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Start Sim" FontSize="28" TextWrapping="Wrap" Foreground="AntiqueWhite" 
                                       VerticalAlignment="Center" Margin="0 0 4 0" FontWeight="SemiBold"></TextBlock>
                        <Polygon Points="0,40 30,20 0,0" Height="40" Fill="AntiqueWhite" VerticalAlignment="Bottom"></Polygon>
                    </StackPanel>
                </Button.Content>
            </Button>
        </Border>
    </Grid>
</Window>
